# Generated by Django 4.1 on 2023-05-20 15:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('bio', models.TextField(null=True)),
                ('avatar', models.ImageField(default='avatar.svg', null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Matriks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.CharField(default='matriks', max_length=18)),
                ('ronde', models.CharField(max_length=200)),
                ('kop', models.CharField(max_length=200)),
                ('regel', models.CharField(max_length=200)),
                ('x_as', models.IntegerField(default=2)),
                ('y_as', models.IntegerField(default=2)),
                ('kol1', models.CharField(default='000', max_length=18)),
                ('kol2', models.CharField(default='000', max_length=18)),
                ('kol3', models.CharField(default='000', max_length=18)),
                ('kol4', models.CharField(default='000', max_length=18)),
                ('kol5', models.CharField(default='000', max_length=18)),
                ('kol6', models.CharField(default='000', max_length=18)),
                ('kol7', models.CharField(default='000', max_length=18)),
                ('kol8', models.CharField(default='000', max_length=18)),
                ('kol9', models.CharField(default='000', max_length=18)),
                ('kol10', models.CharField(default='000', max_length=18)),
                ('kol11', models.CharField(default='000', max_length=18)),
                ('kol12', models.CharField(default='000', max_length=18)),
                ('kol13', models.CharField(default='000', max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.topic')),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='KluisjesRV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kluisnummer', models.CharField(max_length=200)),
                ('naamvoluit', models.CharField(max_length=200)),
                ('email', models.CharField(max_length=200)),
                ('userid', models.CharField(max_length=200)),
                ('kluisje', models.CharField(max_length=200)),
                ('kastje', models.CharField(default='kast1', max_length=18)),
                ('label', models.CharField(default='label', max_length=18)),
                ('type', models.CharField(choices=[('--', '--'), ('H', 'hang'), ('C', 'cijfer')], default='--', max_length=18)),
                ('topic', models.CharField(default='----', max_length=18)),
                ('row', models.CharField(default='----', max_length=18)),
                ('col', models.CharField(default='----', max_length=18)),
                ('verhuurd', models.BooleanField(default=False)),
                ('huurders', models.ManyToManyField(blank=True, related_name='huurders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['kluisnummer'],
            },
        ),
    ]
