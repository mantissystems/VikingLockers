{"ast":null,"code":"var _jsxFileName = \"/home/jozef/Desktop/venv/react/mynotes/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//import notes from '../assets/data'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = _ref => {\n  _s();\n  let {\n    match,\n    history\n  } = _ref;\n  let noteId = match.params.id;\n  let [note, setNote] = useState(null);\n\n  //let note = notes.find(note => note.id == noteId)\n\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    if (noteId == 'new') return;\n    let response = await fetch(`http://127.0.0.1:8080/notes/${noteId}`);\n    let data = await response.json();\n    setNote(data);\n  };\n  const createNote = async () => {\n    await fetch(`http://127.0.0.1:8080/notes/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  const updateNote = async () => {\n    await fetch(`http://127.0.0.1:5000/notes/${noteId}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...note,\n        'updated': new Date()\n      })\n    });\n  };\n  const deleteNote = async () => {\n    await fetch(`http://127.0.0.1:5000/notes/${noteId}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    history.push('/');\n  };\n  let handleSubmit = () => {\n    if (noteId != \"new\" && !note.body) {\n      deleteNote();\n    } else if (noteId != \"new\") {\n      updateNote();\n    } else if (noteId === 'new' && note !== null) {\n      createNote();\n    }\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/',\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), noteId != 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      placeholder: \"Edit note\",\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Note, \"k41NuHLtMLNqVoRGkWqAFGkbS8Y=\");\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useEffect","useState","ReactComponent","ArrowLeft","Link","Note","match","history","noteId","params","id","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","Date","updateNote","deleteNote","push","handleSubmit","e","target","value"],"sources":["/home/jozef/Desktop/venv/react/mynotes/src/pages/NotePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n//import notes from '../assets/data'\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\n\nconst Note = ({ match, history }) => {\n    let noteId = match.params.id\n\n    let [note, setNote] = useState(null)\n\n    //let note = notes.find(note => note.id == noteId)\n\n    useEffect(() => {\n\n        getNote()\n    }, [noteId])\n\n    let getNote = async () => {\n        if (noteId == 'new') return\n        let response = await fetch(`http://127.0.0.1:8080/notes/${noteId}`)\n        let data = await response.json()\n        setNote(data)\n    }\n\n    const createNote = async () => {\n\n\n        await fetch(`http://127.0.0.1:8080/notes/`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ ...note, 'updated': new Date() })\n        })\n    }\n\n\n    const updateNote = async () => {\n        await fetch(`http://127.0.0.1:5000/notes/${noteId}/`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ ...note, 'updated': new Date() })\n        })\n    }\n\n    const deleteNote = async () => {\n        await fetch(`http://127.0.0.1:5000/notes/${noteId}/`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n        history.push('/')\n    }\n\n    let handleSubmit = () => {\n        if (noteId != \"new\" && !note.body) {\n            deleteNote()\n        } else if (noteId != \"new\") {\n            updateNote()\n        } else if (noteId === 'new' && note !== null) {\n            createNote()\n        }\n\n        history.push('/')\n    }\n\n\n    return (\n        <div className=\"note\">\n            <div className=\"note-header\">\n                <h3>\n                    <Link to={'/'}>\n                        <ArrowLeft onClick={handleSubmit} />\n                    </Link>\n                </h3>\n                {noteId != 'new' ? (\n                    <button onClick={deleteNote}>Delete</button>\n                ) : (\n                    <button onClick={handleSubmit}>Done</button>\n                )}\n\n            </div>\n            <textarea onChange={(e) => { setNote({ ...note, 'body': e.target.value }) }} placeholder=\"Edit note\" value={note?.body}></textarea>\n        </div >\n    )\n}\n\nexport default Note"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}