{"ast":null,"code":"var _jsxFileName = \"/home/jozef/Desktop/venv/react/mykluisjes/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\n// https://django-react-notesapp-master-production.up.railway.app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const params = useParams(); // vervanger van match.params.id\n  let noteId = params.id;\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    if (noteId === 'new') return;\n    let response = await fetch(`/kluisjes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let createNote = async () => {\n    fetch(`/notes/`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let updateNote = async () => {\n    fetch(`/notes/${noteId}/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/notes/${noteId}/`, {\n      method: 'DELETE',\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    });\n    history.push('/');\n  };\n  let handleSubmit = () => {\n    if (noteId !== 'new' && note.body === '') {\n      deleteNote();\n    } else if (noteId !== 'new') {\n      updateNote();\n    } else if (noteId === 'new' && note.body !== null) {\n      createNote();\n    }\n    history.push('/');\n  };\n  let handleChange = value => {\n    setNote(note => ({\n      ...note,\n      'body': value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), noteId !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        handleChange(e.target.value);\n      },\n      value: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(NotePage, \"GyecKfmZuiEQj7DMlhNIJEsUGEg=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","ReactComponent","ArrowLeft","NotePage","history","params","noteId","id","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","push","handleSubmit","handleChange","value","e","target"],"sources":["/home/jozef/Desktop/venv/react/mykluisjes/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams,Link } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg'\n// https://django-react-notesapp-master-production.up.railway.app\nconst NotePage = ({  history }) => {\n    const params = useParams(); // vervanger van match.params.id\n    let noteId = params.id;\n    let [note, setNote] = useState(null)\n\n    useEffect(() => {\n        getNote();\n      }, [noteId]);\n\n\n    let getNote = async () => {\n        if (noteId === 'new') return\n\n        let response = await fetch(`/kluisjes/${noteId}/`)\n        let data = await response.json()\n        setNote(data)\n    }\n\n    let createNote = async () => {\n        fetch(`/notes/`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n    }\n\n\n    let updateNote = async () => {\n        fetch(`/notes/${noteId}/`, {\n            method: \"PUT\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(note)\n        })\n    }\n\n\n    let deleteNote = async () => {\n        fetch(`/notes/${noteId}/`, {\n            method: 'DELETE',\n            'headers': {\n                'Content-Type': 'application/json'\n            }\n        })\n        history.push('/')\n    }\n\n    let handleSubmit = () => {\n        if (noteId !== 'new' && note.body === '') {\n            deleteNote()\n        } else if (noteId !== 'new') {\n            updateNote()\n        } else if (noteId === 'new' && note.body !== null) {\n            createNote()\n        }\n        history.push('/')\n    }\n\n    let handleChange = (value) => {\n        setNote(note => ({ ...note, 'body': value }))\n    }\n\n    return (\n        <div className=\"note\" >\n        <div className=\"note-header\">\n            <h3>\n                <Link to=\"/\">\n                <ArrowLeft onClick={handleSubmit} />\n                </Link>\n            </h3>\n            {noteId !== 'new' ? (\n                <button onClick={deleteNote}>Delete</button>\n            ) : (\n                <button onClick={handleSubmit}>Done</button>\n            )}\n\n        </div>\n        <textarea onChange={(e) => { handleChange(e.target.value) }} value={note?.body}></textarea>\n    </div>\n    )\n}\n\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}