{"ast":null,"code":"var _jsxFileName = \"/home/jozef/Desktop/venv/react/mynotes/src/components/ListItem.js\";\nimport React from 'react';\n// import { Link } from 'react-router-dom'\n\n// let getTime = (note) => {\n//     return new Date(note.updated).toLocaleDateString()\n// }\n\n// let getTitle = (note) => {\n//     //spit by new lines and just get the first line\n//     //split will make a list of each line and will only pull on the first line by index zero\n//     const title = note.body.split('\\n')[0]\n//     if (title.length > 45) {\n//         return title.slice(0, 45)\n//     }\n//     return title\n// }\n\n// let getContent = (note) => {\n//     //Get content after title\n//     let title = getTitle(note)\n//     let content = note.body.replaceAll('\\n', '')\n//     content = content.replaceAll(title, '')\n\n//     //Slice content and add three dots in over 45 characters to show there is more\n//     if (content.length > 45) {\n//         return content.slice(0, 45) + '...'\n//     } else {\n//         return content\n//     }\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItem = _ref => {\n  let {\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"List Item\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this)\n  // <Link to={`/note/${note.id}`}>\n  //     <div className=\"notes-list-item\">\n  //         <h3>{getTitle(note)}</h3>\n  //         <p><span>{getTime(note)}</span>{getContent(note)}</p>\n  //     </div>\n  // </Link>\n  ;\n};\n_c = ListItem;\nexport default ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","ListItem","note"],"sources":["/home/jozef/Desktop/venv/react/mynotes/src/components/ListItem.js"],"sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\n\n\n// let getTime = (note) => {\n//     return new Date(note.updated).toLocaleDateString()\n// }\n\n\n// let getTitle = (note) => {\n//     //spit by new lines and just get the first line\n//     //split will make a list of each line and will only pull on the first line by index zero\n//     const title = note.body.split('\\n')[0]\n//     if (title.length > 45) {\n//         return title.slice(0, 45)\n//     }\n//     return title\n// }\n\n\n// let getContent = (note) => {\n//     //Get content after title\n//     let title = getTitle(note)\n//     let content = note.body.replaceAll('\\n', '')\n//     content = content.replaceAll(title, '')\n\n//     //Slice content and add three dots in over 45 characters to show there is more\n//     if (content.length > 45) {\n//         return content.slice(0, 45) + '...'\n//     } else {\n//         return content\n//     }\n\n// }\n\n\nconst ListItem = ({ note }) => {\n    return (\n        <h3>List Item</h3>\n        // <Link to={`/note/${note.id}`}>\n        //     <div className=\"notes-list-item\">\n        //         <h3>{getTitle(note)}</h3>\n        //         <p><span>{getTime(note)}</span>{getContent(note)}</p>\n        //     </div>\n        // </Link>\n    )\n}\n\nexport default ListItem\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAGA,MAAMC,QAAQ,GAAG,QAAc;EAAA,IAAb;IAAEC;EAAK,CAAC;EACtB,oBACI;IAAA,UAAI;EAAS;IAAA;IAAA;IAAA;EAAA;EACb;EACA;EACA;EACA;EACA;EACA;EAAA;AAER,CAAC;AAAA,KAVKD,QAAQ;AAYd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}